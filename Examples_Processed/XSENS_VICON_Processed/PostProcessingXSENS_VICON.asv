% Post Processing "XSENS_VICON" example
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This example aimed at getting the joint angles of the hip, knee and ankle
% flexions computed with XSENS and VICON data during mantutention tasks
%________________________________________________________
%
% Licence
% Toolbox distributed under 3-Clause BSD License
%________________________________________________________
%
% Authors : Charles Pontonnier, Pierre Puchaud
%_______________________________________________________

%% Init
clear all;
close all;
clc;


%% Angles of interest
Solids = {'RHip_J1';'RShank';'RAnkle_J1';'LHip_J1';'LShank';'LAnkle_J1'};

%% Name of the trial treated
filename='Manutention01';

%% VICON DATA
cd('VICON_DATA');

% Loading the Biomechanicalmodel file
load('BiomechanicalModel.mat')

% Solid list extracted from the OsteoarticularModel
Solid_list = {BiomechanicalModel.OsteoArticularModel.name}';

% Get the numbers of solids of interests

[~,num_s]=intersect(Solid_list,Solids,'stable');


% Loading Inverse Kinematic results
load(fullfile(filename,'InverseKinematicsResults.mat'))
IK_VICON=InverseKinematicsResults;

clear InverseKinematicsResults;

%% XSENS DATA
cd .. 
cd('XSENS_DATA');
filename='Manutention01';

% Loading Inverse Kinematic results
load(fullfile(filename,'InverseKinematicsResults.mat'))
IK_XSENS=InverseKinematicsResults;
%% Reconstruction Error
cd ..
% Computing the mean reconstruction error over the trial for each frame
RE_mean_VICON = mean(IK_VICON.ReconstructionError,1);
RE_mean_XSENS = mean(IK_XSENS.ReconstructionError,1);

figure;
hold on

plot(RE_mean_VICON,'b-','LineWidth',2);
plot(RE_mean_XSENS,'r-','LineWidth',2);
xlabel('Frames');
ylabel('Mean Reconstruction Error (m)');
ymax=max(max(RE_mean_VICON),max(RE_mean_XSENS))*1.1;
ylim=[0 ymax];
title('Mean reconstruction error over the trial for each frames')
legend('VICON\_DATA','XSENS\_DATA');
% Computing the global mean reconstruction error for the total amount of
% frames
% disp('Global Mean Reconstruction Error (in m)')
RE_global_VICON = mean(mean(IK_VICON.ReconstructionError,1));
RE_global_XSENS = mean(mean(IK_XSENS.ReconstructionError,1));

text(0,ymax*0.8,[' RE\_global\_VICON=',num2str(RE_global_VICON),'m']);
text(0,ymax*0.77,[' RE\_global\_XSENS=',num2str(RE_global_XSENS),'m']);
%% Joint Angles

% Number of frames
Nb_frames = size(IK_VICON.JointCoordinates,2);

% Get the angles of interest
q=InverseKinematicsResults.JointCoordinates(num_s,:)*180/pi ; % from radian to degrees

figure;

subplot(2,3,1)
plot(q(1,:),'b-','LineWidth',2);% in degrees
xlabel('Frames')
ylabel('Angle (°)')
title([ Solids{1} ' First Y-axis Shoulder rotation'])
xlim([0 Nb_frames])

subplot(2,3,2)
plot(q(2,:),'b-','LineWidth',2);% in degrees
xlabel('Frames')
ylabel('Angle (°)')
title([ Solids{2} ' Second X-axis Shoulder rotation'])
xlim([0 Nb_frames])

subplot(2,3,3)
plot(q(3,:),'b-','LineWidth',2);% in degrees
xlabel('Frames')
ylabel('Angle (°)')
title([ Solids{3} ' Third Y-axis Shoulder rotation'])
xlim([0 Nb_frames])

subplot(2,3,4)
plot(q(4,:),'b-','LineWidth',2);% in degrees
xlabel('Frames')
ylabel('Angle (°)')
title([ Solids{4} ' First Z-axis rotation - Elbow Flexion/Extension'])
xlim([0 Nb_frames])

subplot(2,3,5)
plot(q(5,:),'b-','LineWidth',2);% in degrees
xlabel('Frames')
ylabel('Angle (°)')
title([ Solids{5} ' Second Y-axis rotation - Elbow Int/Ext Rotation'])
xlim([0 Nb_frames])


% On the graph, we can see the angles from inverse kinematics for the 
% selected angles of the shoulder and the elbow. A 4th order zerolag
% butterworth filter was applied on these angles with a cutoff frequency of
% 5 Hz as it is specify in the Analysis parameters.